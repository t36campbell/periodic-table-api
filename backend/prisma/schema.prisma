// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int      @default(autoincrement()) @id
  email String   @unique
  name  String
  role  Role     @default(USER)
}

model Element {
  id          Int      @default(autoincrement()) @id
  element     String
  symbol      String
  svgPath     String?
  groupId     Int
  periodId    Int
  typeId      Int?
}

model AtomicParticles {
  id            Int      @default(autoincrement()) @id
  neutrons      Int
  protons       Int
  electrons     Int
}

model ElectronShell {
  id            Int      @default(autoincrement()) @id
  shells        Int
  valence       Int
  electrons     Int
}

model ElementProperties {
  id                  Int      @default(autoincrement()) @id
  atomicMass          Float
  atomicRadius        Float
  electronegativity   Float
  firstIonization     Float
  meltingPoint        Float
  boilingPoint        Float
  isotopes            Float
  specificHeat        Float
  density             String   // expressed in scientific notation
}

model ElementDetails {
  id              Int      @default(autoincrement()) @id
  radioactive     Boolean
  natural         Boolean
  metal           Boolean
  nonmetal        Boolean
  metalloid       Boolean
  discovererId    Int?
  discovered      DateTime? @db.Date
}

model ElementDiscoverer {
  id            Int      @default(autoincrement()) @id
  firstName     String
  lastName      String
}

model ElementGroup {
  id      Int      @default(autoincrement()) @id
  name    String   @unique
}

model ElementPeriod {
  id      Int      @default(autoincrement()) @id
  name    String   @unique
}

model ElementType {
  id      Int      @default(autoincrement()) @id
  name    String   @unique
}

// figure out change in phase based on temp
model ElementPhase {    
  id                  Int      @default(autoincrement()) @id
  typeId              Int   
  temperatureMin      Float   
  temperatureMax      Float   
}

model ElementPhaseType {    
  id      Int      @default(autoincrement()) @id
  name    String   @unique
}


enum Role {
  ADMIN
  USER
}